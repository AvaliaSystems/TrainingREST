on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{runner.os}}-maven-${{hashFiles('**/pom.xml')}}
          restore-keys:
           ${{runner.os}}-maven-
      - name: Build with maven
        run: |
             mkdir staging
             cd gamification-impl
             mvn clean package
             cd ..
             cp gamification-impl/target/*.jar staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
     - uses: actions/checkout@v2
     - name: Set up JDK 11
       uses: actions/setup-java@v1
       with:
         java-version: 11
     - uses: actions/cache@v1
       with:
         path: ~/.m2/repository
         key: ${{runner.os}}-maven-${{hashFiles('**/pom.xml')}}
         restore-keys:
          ${{runner.os}}-maven-
     - uses: actions/download-artifact@v2
       with:
        name: Package
        path: staging  
     - name: mkdir apps into springboot
       run: mkdir ./docker/images/springboot/apps
     - name: move jar ./docker/images/springboot/apps
       run: cp staging/gamification-impl-1.0.0.jar ./docker/images/springboot/apps/gamification-impl-1.0.0.jar
     - name: move src, pom.xml and add .env into failsafe image
       run: |
        cp -r ./gamification-specs/src ./docker/images/failsafe/src
        cp -r ./gamification-specs/pom.xml ./docker/images/failsafe/pom.xml
        mv ./docker/images/failsafe/.envexample ./docker/images/failsafe/.env
     - name: Login to github registry
       run: echo ${{secrets.DEV_ZARETTI_PAT}} | docker login ghcr.io --username dev-zaretti --password-stdin
     - name: build infrastructure
       run: |
         cd ./docker/workflows_topologie
         docker-compose build --pull amtspringboot
     - name: up infrastructure
       run: |
         cd ./docker/workflows_topologie
         docker-compose up -d amtdb amtspringboot
     - name: run failsafe image
       run: |
         ls -la ./docker/images/failsafe
         cd ./docker/workflows_topologie
         docker-compose up failsafe
     - name: down infrastructure
       run: |
         cd ./docker/workflows_topologie
         docker-compose down
     - name: deploy amtspringboottestimage
       run:  |
        docker push ghcr.io/gusamaal/gamification-engine-amt/gamificationenginetest:latest
         
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
     - uses: actions/checkout@v2
     - name: Set up JDK 11
       uses: actions/setup-java@v1
       with:
         java-version: 11
     - name: Login to github registry
       run: echo ${{secrets.DEV_ZARETTI_PAT}} | docker login ghcr.io --username dev-zaretti --password-stdin
     - name: pull image tested
       run: docker pull ghcr.io/gusamaal/gamification-engine-amt/gamificationenginetest:latest   
     - name: publish images
       run: |
         docker tag ghcr.io/gusamaal/gamification-engine-amt/gamificationenginetest:latest ghcr.io/gusamaal/gamification-engine-amt/gamificationengine:latest
         docker push ghcr.io/gusamaal/gamification-engine-amt/gamificationengine:latest
             
